{"ast":null,"code":"import api from './api';\nconst orderService = {\n  // Create new order\n  createOrder: async (orderData, token) => {\n    const response = await api.post('/orders', orderData);\n    return response.data;\n  },\n  // Get user orders\n  getUserOrders: async (filters = {}, token) => {\n    const response = await api.get('/orders', {\n      params: filters\n    });\n    return response.data;\n  },\n  // Get order by ID\n  getOrderById: async (id, token) => {\n    const response = await api.get(`/orders/${id}`);\n    return response.data;\n  },\n  // Create payment intent\n  createPaymentIntent: async (orderId, token) => {\n    const response = await api.post(`/orders/${orderId}/payment-intent`);\n    return response.data;\n  },\n  // Confirm payment\n  confirmPayment: async (orderId, paymentIntentId, token) => {\n    const response = await api.post(`/orders/${orderId}/confirm-payment`, {\n      paymentIntentId\n    });\n    return response.data;\n  },\n  // Cancel order\n  cancelOrder: async (orderId, reason, token) => {\n    const response = await api.put(`/orders/${orderId}/cancel`, {\n      reason\n    });\n    return response.data;\n  },\n  // Admin: Get all orders\n  getAllOrders: async (filters = {}, token) => {\n    const response = await api.get('/orders/admin/all', {\n      params: filters\n    });\n    return response.data;\n  },\n  // Admin: Get order statistics\n  getOrderStats: async token => {\n    const response = await api.get('/orders/admin/stats');\n    return response.data;\n  },\n  // Admin: Update order status\n  updateOrderStatus: async (orderId, statusData, token) => {\n    const response = await api.put(`/orders/${orderId}/status`, statusData);\n    return response.data;\n  }\n};\nexport default orderService;","map":{"version":3,"names":["api","orderService","createOrder","orderData","token","response","post","data","getUserOrders","filters","get","params","getOrderById","id","createPaymentIntent","orderId","confirmPayment","paymentIntentId","cancelOrder","reason","put","getAllOrders","getOrderStats","updateOrderStatus","statusData"],"sources":["C:/Users/Ayoub/Desktop/Projects/e-commerce/frontend/src/services/orderService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst orderService = {\r\n  // Create new order\r\n  createOrder: async (orderData, token) => {\r\n    const response = await api.post('/orders', orderData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user orders\r\n  getUserOrders: async (filters = {}, token) => {\r\n    const response = await api.get('/orders', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get order by ID\r\n  getOrderById: async (id, token) => {\r\n    const response = await api.get(`/orders/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create payment intent\r\n  createPaymentIntent: async (orderId, token) => {\r\n    const response = await api.post(`/orders/${orderId}/payment-intent`);\r\n    return response.data;\r\n  },\r\n\r\n  // Confirm payment\r\n  confirmPayment: async (orderId, paymentIntentId, token) => {\r\n    const response = await api.post(`/orders/${orderId}/confirm-payment`, {\r\n      paymentIntentId,\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Cancel order\r\n  cancelOrder: async (orderId, reason, token) => {\r\n    const response = await api.put(`/orders/${orderId}/cancel`, { reason });\r\n    return response.data;\r\n  },\r\n\r\n  // Admin: Get all orders\r\n  getAllOrders: async (filters = {}, token) => {\r\n    const response = await api.get('/orders/admin/all', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Admin: Get order statistics\r\n  getOrderStats: async (token) => {\r\n    const response = await api.get('/orders/admin/stats');\r\n    return response.data;\r\n  },\r\n\r\n  // Admin: Update order status\r\n  updateOrderStatus: async (orderId, statusData, token) => {\r\n    const response = await api.put(`/orders/${orderId}/status`, statusData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default orderService; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,YAAY,GAAG;EACnB;EACAC,WAAW,EAAE,MAAAA,CAAOC,SAAS,EAAEC,KAAK,KAAK;IACvC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,SAAS,EAAEH,SAAS,CAAC;IACrD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,aAAa,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,EAAEL,KAAK,KAAK;IAC5C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAC,SAAS,EAAE;MAAEC,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC9D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAK,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAET,KAAK,KAAK;IACjC,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAC,WAAWG,EAAE,EAAE,CAAC;IAC/C,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAO,mBAAmB,EAAE,MAAAA,CAAOC,OAAO,EAAEX,KAAK,KAAK;IAC7C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,WAAWS,OAAO,iBAAiB,CAAC;IACpE,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAS,cAAc,EAAE,MAAAA,CAAOD,OAAO,EAAEE,eAAe,EAAEb,KAAK,KAAK;IACzD,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,WAAWS,OAAO,kBAAkB,EAAE;MACpEE;IACF,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAW,WAAW,EAAE,MAAAA,CAAOH,OAAO,EAAEI,MAAM,EAAEf,KAAK,KAAK;IAC7C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,GAAG,CAAC,WAAWL,OAAO,SAAS,EAAE;MAAEI;IAAO,CAAC,CAAC;IACvE,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAc,YAAY,EAAE,MAAAA,CAAOZ,OAAO,GAAG,CAAC,CAAC,EAAEL,KAAK,KAAK;IAC3C,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAC,mBAAmB,EAAE;MAAEC,MAAM,EAAEF;IAAQ,CAAC,CAAC;IACxE,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAe,aAAa,EAAE,MAAOlB,KAAK,IAAK;IAC9B,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACU,GAAG,CAAC,qBAAqB,CAAC;IACrD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAgB,iBAAiB,EAAE,MAAAA,CAAOR,OAAO,EAAES,UAAU,EAAEpB,KAAK,KAAK;IACvD,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACoB,GAAG,CAAC,WAAWL,OAAO,SAAS,EAAES,UAAU,CAAC;IACvE,OAAOnB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}