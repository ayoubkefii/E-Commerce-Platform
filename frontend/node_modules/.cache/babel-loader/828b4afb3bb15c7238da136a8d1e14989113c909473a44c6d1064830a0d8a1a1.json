{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../services/api\";\n\n// Get personalized recommendations\nexport const getRecommendations = createAsyncThunk(\"recommendations/getRecommendations\", async (_, thunkAPI) => {\n  try {\n    const response = await api.get(\"/products/recommendations\");\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get recommendations based on product\nexport const getProductRecommendations = createAsyncThunk(\"recommendations/getProductRecommendations\", async (productId, thunkAPI) => {\n  try {\n    const response = await api.get(`/products/${productId}/recommendations`);\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Get trending products\nexport const getTrendingProducts = createAsyncThunk(\"recommendations/getTrendingProducts\", async (_, thunkAPI) => {\n  try {\n    const response = await api.get(\"/products/trending\");\n    return response.data;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst initialState = {\n  personalized: [],\n  productBased: [],\n  trending: [],\n  isLoading: false,\n  isError: false,\n  message: \"\"\n};\nconst recommendationsSlice = createSlice({\n  name: \"recommendations\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n    clearError: state => {\n      state.isError = false;\n      state.message = \"\";\n    },\n    clearProductRecommendations: state => {\n      state.productBased = [];\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Get Recommendations\n    .addCase(getRecommendations.pending, state => {\n      state.isLoading = true;\n    }).addCase(getRecommendations.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.personalized = action.payload.products || [];\n    }).addCase(getRecommendations.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // Get Product Recommendations\n    .addCase(getProductRecommendations.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProductRecommendations.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.productBased = action.payload.products || [];\n    }).addCase(getProductRecommendations.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // Get Trending Products\n    .addCase(getTrendingProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTrendingProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.trending = action.payload.products || [];\n    }).addCase(getTrendingProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset,\n  clearError,\n  clearProductRecommendations\n} = recommendationsSlice.actions;\nexport default recommendationsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","getRecommendations","_","thunkAPI","response","get","data","error","message","toString","rejectWithValue","getProductRecommendations","productId","getTrendingProducts","initialState","personalized","productBased","trending","isLoading","isError","recommendationsSlice","name","reducers","reset","state","clearError","clearProductRecommendations","extraReducers","builder","addCase","pending","fulfilled","action","payload","products","rejected","actions","reducer"],"sources":["C:/Users/Ayoub/Desktop/Projects/e-commerce/frontend/src/features/recommendations/recommendationsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport api from \"../../services/api\";\r\n\r\n// Get personalized recommendations\r\nexport const getRecommendations = createAsyncThunk(\r\n  \"recommendations/getRecommendations\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await api.get(\"/products/recommendations\");\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get recommendations based on product\r\nexport const getProductRecommendations = createAsyncThunk(\r\n  \"recommendations/getProductRecommendations\",\r\n  async (productId, thunkAPI) => {\r\n    try {\r\n      const response = await api.get(`/products/${productId}/recommendations`);\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Get trending products\r\nexport const getTrendingProducts = createAsyncThunk(\r\n  \"recommendations/getTrendingProducts\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await api.get(\"/products/trending\");\r\n      return response.data;\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  personalized: [],\r\n  productBased: [],\r\n  trending: [],\r\n  isLoading: false,\r\n  isError: false,\r\n  message: \"\",\r\n};\r\n\r\nconst recommendationsSlice = createSlice({\r\n  name: \"recommendations\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isError = false;\r\n      state.message = \"\";\r\n    },\r\n    clearError: (state) => {\r\n      state.isError = false;\r\n      state.message = \"\";\r\n    },\r\n    clearProductRecommendations: (state) => {\r\n      state.productBased = [];\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Get Recommendations\r\n      .addCase(getRecommendations.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getRecommendations.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.personalized = action.payload.products || [];\r\n      })\r\n      .addCase(getRecommendations.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      // Get Product Recommendations\r\n      .addCase(getProductRecommendations.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getProductRecommendations.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.productBased = action.payload.products || [];\r\n      })\r\n      .addCase(getProductRecommendations.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      // Get Trending Products\r\n      .addCase(getTrendingProducts.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getTrendingProducts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.trending = action.payload.products || [];\r\n      })\r\n      .addCase(getTrendingProducts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, clearError, clearProductRecommendations } =\r\n  recommendationsSlice.actions;\r\n\r\nexport default recommendationsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}