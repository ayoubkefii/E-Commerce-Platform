{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayoub\\\\Desktop\\\\Projects\\\\e-commerce\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [theme, setThemeState] = useState(() => {\n    // Check localStorage first, then system preference\n    const saved = localStorage.getItem(\"theme\");\n    if (saved !== null) {\n      return saved;\n    }\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  });\n  useEffect(() => {\n    // Update localStorage when theme changes\n    localStorage.setItem(\"theme\", theme);\n\n    // Update document class for Tailwind CSS\n    if (theme === \"dark\") {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [theme]);\n  const toggleTheme = () => {\n    setThemeState(prev => prev === \"dark\" ? \"light\" : \"dark\");\n  };\n  const setTheme = newTheme => {\n    setThemeState(newTheme);\n  };\n  const value = {\n    theme,\n    toggleTheme,\n    setTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"zgK6p11cFT7O2Z7T8Rvdl9cjEKM=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","theme","setThemeState","saved","localStorage","getItem","window","matchMedia","matches","setItem","document","documentElement","classList","add","remove","toggleTheme","prev","setTheme","newTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayoub/Desktop/Projects/e-commerce/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setThemeState] = useState(() => {\r\n    // Check localStorage first, then system preference\r\n    const saved = localStorage.getItem(\"theme\");\r\n    if (saved !== null) {\r\n      return saved;\r\n    }\r\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n      ? \"dark\"\r\n      : \"light\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Update localStorage when theme changes\r\n    localStorage.setItem(\"theme\", theme);\r\n\r\n    // Update document class for Tailwind CSS\r\n    if (theme === \"dark\") {\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setThemeState((prev) => (prev === \"dark\" ? \"light\" : \"dark\"));\r\n  };\r\n\r\n  const setTheme = (newTheme) => {\r\n    setThemeState(newTheme);\r\n  };\r\n\r\n  const value = {\r\n    theme,\r\n    toggleTheme,\r\n    setTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IAC5C;IACA,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,KAAK,IAAI,EAAE;MAClB,OAAOA,KAAK;IACd;IACA,OAAOG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GAC5D,MAAM,GACN,OAAO;EACb,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACd;IACAe,YAAY,CAACK,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;;IAEpC;IACA,IAAIA,KAAK,KAAK,MAAM,EAAE;MACpBS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACb,KAAK,CAAC,CAAC;EAEX,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,aAAa,CAAEc,IAAI,IAAMA,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,MAAO,CAAC;EAC/D,CAAC;EAED,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC7BhB,aAAa,CAACgB,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMC,KAAK,GAAG;IACZlB,KAAK;IACLc,WAAW;IACXE;EACF,CAAC;EAED,oBACEzB,OAAA,CAACC,YAAY,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAAEA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAE3E,CAAC;AAACxB,GAAA,CAzCWF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}