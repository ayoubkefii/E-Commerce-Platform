{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../../services/authService';\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user || null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (userData, thunkAPI) => {\n  try {\n    return await authService.register(userData);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async (userData, thunkAPI) => {\n  try {\n    return await authService.login(userData);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Logout user\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\n\n// Get user profile\nexport const getProfile = createAsyncThunk('auth/getProfile', async (_, thunkAPI) => {\n  try {\n    var _thunkAPI$getState$au;\n    const token = (_thunkAPI$getState$au = thunkAPI.getState().auth.user) === null || _thunkAPI$getState$au === void 0 ? void 0 : _thunkAPI$getState$au.token;\n    return await authService.getProfile(token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Update user profile\nexport const updateProfile = createAsyncThunk('auth/updateProfile', async (userData, thunkAPI) => {\n  try {\n    var _thunkAPI$getState$au2;\n    const token = (_thunkAPI$getState$au2 = thunkAPI.getState().auth.user) === null || _thunkAPI$getState$au2 === void 0 ? void 0 : _thunkAPI$getState$au2.token;\n    return await authService.updateProfile(userData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    },\n    clearError: state => {\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register\n    .addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    })\n    // Login\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    })\n    // Logout\n    .addCase(logout.fulfilled, state => {\n      state.user = null;\n    })\n    // Get Profile\n    .addCase(getProfile.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }).addCase(getProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    })\n    // Update Profile\n    .addCase(updateProfile.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","userData","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","getProfile","_","_thunkAPI$getState$au","token","getState","auth","updateProfile","_thunkAPI$getState$au2","authSlice","name","reducers","reset","state","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/Ayoub/Desktop/Projects/e-commerce/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from '../../services/authService';\r\n\r\n// Get user from localStorage\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n  user: user || null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\n// Register user\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      return await authService.register(userData);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      return await authService.login(userData);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Logout user\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  await authService.logout();\r\n});\r\n\r\n// Get user profile\r\nexport const getProfile = createAsyncThunk(\r\n  'auth/getProfile',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user?.token;\r\n      return await authService.getProfile(token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Update user profile\r\nexport const updateProfile = createAsyncThunk(\r\n  'auth/updateProfile',\r\n  async (userData, thunkAPI) => {\r\n    try {\r\n      const token = thunkAPI.getState().auth.user?.token;\r\n      return await authService.updateProfile(userData, token);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n    clearError: (state) => {\r\n      state.isError = false;\r\n      state.message = '';\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Register\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      // Login\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      // Logout\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      })\r\n      // Get Profile\r\n      .addCase(getProfile.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getProfile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = { ...state.user, ...action.payload };\r\n      })\r\n      .addCase(getProfile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      })\r\n      // Update Profile\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = { ...state.user, ...action.payload };\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, clearError } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}